#!/usr/bin/env node

require('dotenv').config();

const { program } = require('commander');
const pk = require('../package.json');

program
  .name(pk.name)
  .description(pk.description)
  .requiredOption('--token <token>', 'Cloudflare API Token', process.env.CLOUDFLARE_API_TOKEN)
  .requiredOption('--account <account>', 'Cloudflare account ID', process.env.CLOUDFLARE_ACCOUNT_ID)
  .requiredOption('--d1 <database>', 'Cloudflare D1 uuid', process.env.CLOUDFLARE_DB_ID)
  .option('-l, --limit <limit>', 'number of values in each insert', (value, previous) => parseInt(value, 10), 100)
  .option('-a, --apiLimit <apiLimit>', 'number of fetched rows per API call', (value, previous) => parseInt(value, 10), 5000)
  .argument('[file]', 'file', './backup.sql')
  .version(pk.version, '-v, --version')
  .parse();

const options = program.opts();

if (isNaN(options.limit) || options.limit > 1000) {
  console.error("error: option '--limit <limit>' is not an integer, or is over 1000!");
  process.exit(1);
}
if (isNaN(options.apiLimit) || options.apiLimit > 20000) {
  console.error("error: option '--apiLimit <apiLimit>' is not an integer, or is over 20000!");
  process.exit(1);
}

require('../src/backup')({ ...options, file: program.processedArgs[0] });
